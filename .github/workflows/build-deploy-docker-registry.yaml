name: Sms balance check service

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Actions
        uses: actions/checkout@v3
      - name: Create environment file and update variable from secrets
        run: |
          cp .env.example .env
          sed -i '/PORT/d' .env
          sed -i '/ROBODOC_MYSQL_HOST/d' .env
          sed -i '/ROBODOC_MYSQL_PORT/d' .env
          sed -i '/ROBODOC_MYSQL_USER/d' .env
          sed -i '/ROBODOC_MYSQL_PASSWORD/d' .env
          sed -i '/ROBODOC_MYSQL_DB_NAME/d' .env
          sed -i '/DIGITALOCEAN_ACCESS_KEY_ID/d' .env
          sed -i '/DIGITALOCEAN_SECRET_ACCESS_KEY/d' .env
          sed -i '/DIGITALOCEAN_BUCKET/d' .env
          sed -i '/DIGITALOCEAN_FOLDER/d' .env

          echo 'PORT=${{ secrets.APP_PORT }}' >> .env
          echo 'ROBODOC_MYSQL_HOST=${{ secrets.ROBODOC_MYSQL_HOST }}' >> .env
          echo 'ROBODOC_MYSQL_PORT=${{ secrets.ROBODOC_MYSQL_PORT }}' >> .env
          echo 'ROBODOC_MYSQL_USER=${{ secrets.ROBODOC_MYSQL_USER }}' >> .env
          echo 'ROBODOC_MYSQL_PASSWORD=${{ secrets.ROBODOC_MYSQL_PASSWORD }}' >> .env
          echo 'ROBODOC_MYSQL_DB_NAME=${{ secrets.ROBODOC_MYSQL_DB_NAME }}' >> .env
          echo 'DIGITALOCEAN_ACCESS_KEY_ID=${{ secrets.DIGITALOCEAN_ACCESS_KEY_ID }}' >> .env
          echo 'DIGITALOCEAN_SECRET_ACCESS_KEY=${{ secrets.DIGITALOCEAN_SECRET_ACCESS_KEY }}' >> .env
          echo 'DIGITALOCEAN_BUCKET=${{ secrets.DIGITALOCEAN_BUCKET }}' >> .env
          echo 'DIGITALOCEAN_FOLDER=${{ secrets.DIGITALOCEAN_FOLDER }}' >> .env
        shell: bash

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      #Login to Docker hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push
        if: ${{ success() }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY_NAME }}:latest

  deploy:
    name: Development deploy process
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Development Server Access via SSH Access
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /
            docker stop -f ${{ secrets.DOCKER_REPOSITORY_NAME }} || true
            docker rm -f ${{ secrets.DOCKER_REPOSITORY_NAME }} || true
            docker pull ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY_NAME }}
            docker run -d -p 3032:3000 --name ${{ secrets.DOCKER_REPOSITORY_NAME }} ${{ secrets.DOCKER_CONTAINER_REGISTRY }}/${{ secrets.DOCKER_REPOSITORY_NAME }}
            docker image prune -af
